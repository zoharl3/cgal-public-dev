/*!

\page namedparameters Named Parameters

\section howto How to use BGL named parameters

The sequence should start with `CGAL::parameters::`

\section list List of available named parameters

Given a `PolygonMesh` type of BGL graph,
and a `Kernel` in which constructions are performed and predicates evaluated.

<ul>
<li> `vertex_point_map`. An instance of a class model of `ReadablePropertyMap` with
`boost::graph_traits<PolygonMesh>::%vertex_descriptor` as key type and
`Kernel::Point_3` as value type.

<li> `use_delaunay_triangulation`. A boolean. If `true`, use the Delaunay triangulation facet search space. Its default value is `true`.

<li> `density_control_factor`. A floating scalar value which controls the density of the mesh generated by refinement, and larger values cause denser refinements. The density of vertices in the refined region is this factor times higher than before refinement.
 Its default value is `CGAL::sqrt(2)`.

<li> `fairing_continuity`. An unsigned integer which controls the tangential continuity of the output surface for fairing. The possible values are 0, 1 and 2, refering to the C^0, C^1 and C^2 continuity. The default value is 1.

<li> `sparse_linear_solver`. An instance of a class model of `SparseLinearAlgebraTraitsWithFactor_d`.
 If \ref thirdpartyEigen "Eigen" 3.2 (or greater) is available and `CGAL_EIGEN3_ENABLED` is defined, then an overload of `Eigen_solver_traits` is provided as default value :\n
\code
CGAL::Eigen_solver_traits<
Eigen::SparseLU<
CGAL::Eigen_sparse_matrix<double>::EigenType,
Eigen::COLAMDOrdering<int> >  >
\endcode


</ul>

*/