/// \defgroup PkgPolygonMeshProcessing Polygon Mesh Processing Reference
/// \defgroup PkgPolygonMeshProcessingConcepts Concepts
/// \ingroup PkgPolygonMeshProcessing
/// \defgroup polyhedron_stitching_grp CGAL::Polygon_mesh_processing::stitch_polyhedron()
/// \todo `Polyhedron` should be a model of `MutableFaceGraph` and `FaceListGraph`
/// \ingroup PkgPolygonMeshProcessing
 
/*!
\addtogroup PkgPolygonMeshProcessing
 
\cgalPkgDescriptionBegin{Polygon Mesh Processing, PkgPolygonMeshProcessingSummary}
\cgalPkgPicture{hole_filling_ico.png}
 
\cgalPkgSummaryBegin
\cgalPkgAuthor{Ilker O. Yaz}
\cgalPkgDesc{This package provides functionality to fill holes, refine and fair triangulated regions on surface mesh.}
\cgalPkgManuals{Chapter_PolygonMeshProcessing,PkgPolygonMeshProcessing}
\cgalPkgSummaryEnd
 
\cgalPkgShortInfoBegin
\cgalPkgSince{4.7}
\cgalPkgDependsOn{\ref PkgTriangulation3Summary, Sparse square solver such as those from  \ref thirdpartyEigen}
\cgalPkgBib{cgal-tmp}
\cgalPkgLicense{\ref licensesGPL "GPL"}
\cgalPkgDemo{Operations on Polyhedra,polyhedron_3.zip}
\cgalPkgShortInfoEnd
 
\cgalPkgDescriptionEnd

\cgalClassifedRefPages


## Hole Filling Functions ##
- `CGAL::triangulate_hole()`
- `CGAL::triangulate_and_refine_hole()`
- `CGAL::triangulate_refine_and_fair_hole()`
- `CGAL::triangulate_hole_polyline()`

## Predicate Functions and Classes ##
- `CGAL::is_oriented()`
- `CGAL::Polygon_mesh_processing::is_self_intersecting()`
- `CGAL::Polygon_mesh_processing::self_intersections()`
- `CGAL::Point_inside_polyhedron_3`

## Combinatorial Repairing Functions and Classes ##
- \link polyhedron_stitching_grp `CGAL::Polygon_mesh_processing::stitch_polyhedron()` \endlink
- `CGAL::orient_polygon_soup()`
- `CGAL::Polygon_mesh_processing::polygon_soup_to_polyhedron()`

## Meshing Functions ##
- `CGAL::fair()`
- `CGAL::refine()`
- `CGAL::triangulate_polyhedron()`

## Normal Computation Functions ##
- `CGAL::Polygon_mesh_processing::compute_facet_normal()`
- `CGAL::Polygon_mesh_processing::compute_vertex_normal()`

## Other Classes ##
- `CGAL::Polyhedron_slicer_3`

\todo remove FairWeightCalculator and replace it by a property map. Note that the default property map should be documented
\todo add header file CGAL/Hole_filling/do_not_use_DT3.h that disable the need of having Triangulation_3 package

*/